<div class="container py-5">
  <div class="row justify-content-center">
    <div class="col-lg-8">
      <div class="card">
        <div class="card-body">
          <div class="d-flex justify-content-between align-items-center mb-4">
            <h1 class="h3 mb-0"><%= @prompt.title %></h1>
            <%= link_to prompts_path, class: "btn btn-outline-secondary" do %>
              <span>← 一覧に戻る</span>
            <% end %>
          </div>
          
          <div class="card my-4">
            <div class="card-body">
              <h2 class="card-title"><%= @prompt.title %></h2>
              <div class="d-flex justify-content-between align-items-center mb-3">
                <small class="text-muted"><%= l @prompt.created_at, format: :long %></small>
                <div>
                  <%= link_to @prompt.url, @prompt.url, target: "_blank", class: "text-decoration-none" %>
                  <i class="bi bi-box-arrow-up-right"></i>
                </div>
              </div>
              <p class="card-text"><%= @prompt.description %></p>
              
              <!-- タグ提案セクション -->
              <div class="mt-4">
                <h5>タグ</h5>
                <div class="d-flex flex-wrap gap-2">
                  <% @prompt.tags.each do |tag| %>
                    <span class="badge bg-primary"><%= tag.name %></span>
                  <% end %>
                </div>
                
                <!-- AIタグ提案セクション -->
                <% if @suggested_tags.present? %>
                  <div class="card mt-4">
                    <div class="card-header">
                      <h5 class="mb-0">AIタグ提案</h5>
                    </div>
                    <div class="card-body">
                      <div class="tag-suggestions">
                        <%= @suggested_tags %>
                      </div>
                      
                      <%= form_with url: apply_tags_prompt_path(@prompt), method: :post, class: "mt-3" do |f| %>
                        <div class="form-group">
                          <%= f.text_field :tags, value: @suggested_tags, class: "form-control" %>
                        </div>
                        <%= f.submit "タグを適用", class: "btn btn-primary mt-2" %>
                      <% end %>
                    </div>
                  </div>
                <% end %>
              </div>
            </div>
          </div>
          
          <div class="mt-4">
            <%= link_to "編集", edit_prompt_path(@prompt), class: "btn btn-primary me-2" %>
            <%= link_to "戻る", prompts_path, class: "btn btn-secondary" %>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // URLコピー機能
    const copyButtons = document.querySelectorAll('.copy-btn');
    
    copyButtons.forEach(button => {
      button.addEventListener('click', function() {
        const text = this.getAttribute('data-clipboard-text');
        navigator.clipboard.writeText(text).then(() => {
          // Success feedback
          const originalText = button.innerHTML;
          button.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check" viewBox="0 0 16 16"><path d="M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z"/></svg>';
          button.classList.add('btn-success');
          button.classList.remove('btn-outline-secondary');
          
          setTimeout(() => {
            button.innerHTML = originalText;
            button.classList.remove('btn-success');
            button.classList.add('btn-outline-secondary');
          }, 2000);
        });
      });
    });
    
    // 削除ボタン機能
    const deleteButton = document.getElementById('delete-prompt-btn');
    if (deleteButton) {
      deleteButton.addEventListener('click', function() {
        const promptId = this.getAttribute('data-prompt-id');
        const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
        
        // 削除リクエストを送信
        fetch(`/prompts/${promptId}`, {
          method: 'DELETE',
          headers: {
            'X-CSRF-Token': csrfToken,
            'Content-Type': 'application/json',
            'Accept': 'application/json'
          }
        })
        .then(response => {
          // 成功したら一覧ページへリダイレクト
          window.location.href = '/prompts';
        })
        .catch(error => {
          console.error('Error:', error);
          // エラーが発生しても一覧ページへリダイレクト
          window.location.href = '/prompts';
        });
      });
    }
  });
</script>